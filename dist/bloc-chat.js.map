{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f805c91d8726021ea215","webpack:///./src/index.js","webpack:///./src/components/bloc-chat.jsx","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./~/reactfire/dist/reactfire.js","webpack:///./src/components/sign-in.jsx"],"names":[],"mappings":"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I;AACjB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,sBAAsB;AACnC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,sBAAsB;AACnC,cAAa,YAAY;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,sBAAsB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,sBAAsB;AACnC,cAAa,YAAY;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;;;;;;;;;kCC/YiB,CAAO;;;;AAEzB,KAAM,MAAM,GAAG,mBAAM,WAAW,CAAC;;;AAE/B,SAAM,oBAAG;;AAEP,SAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;AACxD,aAAQ,CAAC,IAAI,EAAE,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM,EAAK;;AACzD,WAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AACzB,eAAQ,CAAC,QAAQ,EAAE,CAAC,GAAG,YAAU,IAAI,CAAC,GAAG,CAAG,CAAC,GAAG,CAAC;AAC/C,oBAAW,EAAE,IAAI,CAAC,WAAW;AAC7B,cAAK,EAAE,IAAI,CAAC,KAAK;AACjB,iBAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG;AAClC,iBAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,qBAAY,EAAE,IAAI,CAAC,YAAY;AAC/B,cAAK,EAAE,MAAM,CAAC,UAAU,CAAC,WAAW;QACrC,CAAC,CAAC;MACJ,CAAC,SAAM,CAAC,UAAC,KAAK;cAAK,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;MAAA,CAAC,CAAC;IAC3C;;AAED,SAAM,oBAAG;AACP,YAAO;;SAAQ,OAAO,EAAE,IAAI,CAAC,MAAO;;MAA6B,CAAC;IACnE;EACF,CAAC,CAAC;sBACY,MAAM","file":"bloc-chat.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"BlocChat\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"BlocChat\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f805c91d8726021ea215\n **/","module.exports = {\n  BlocChat:\n    require(\"./components/bloc-chat\")\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import React from \"react\";\nimport ReactFireMixin from \"reactfire\";\n\nimport SignIn from \"./sign-in\";\n\nconst BlocChat = React.createClass({\n\n  messagesRef: firebase.database().ref(\"messages\"), // eslint-disable-line no-undef\n  usersRef: firebase.database().ref(\"users\"), // eslint-disable-line no-undef\n\n  mixins: [ReactFireMixin],\n\n  getInitialState() {\n    return {\n      messages: [],\n      user: null\n    };\n  },\n\n  componentWillMount() {\n    const self = this;\n    firebase.auth().onAuthStateChanged((authData) => { // eslint-disable-line no-undef\n      if (authData) {\n        self.setState({user: authData});\n      }\n    });\n    this.bindAsArray(this.messagesRef, \"messages\");\n  },\n\n  render() {\n    // console.log(\"BlocChat:render\", this.state);\n    const { messages, user } = this.state;\n    return !user ? <SignIn /> : (\n      <div>\n        {\n          messages.length ? messages.map((message, index) =>\n            <div key={index}>\n              <b>{message.user.displayName}</b>\n              <span>{message.text}</span>\n            </div>) : \"Loading messagesâ€¦\"\n        }\n        <form onSubmit={(e) => e.preventDefault()}>\n          <input ref=\"text\"/>\n          <button onClick={() =>\n            this.messagesRef.push({\n              text: this.refs.text.value,\n              user: {\n                displayName: user.displayName,\n                photoURL: user.photoURL,\n                uid: user.uid\n              }\n            })}\n          >Send</button>\n        </form>\n      </div>\n    );\n  }\n});\nexport default BlocChat;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/bloc-chat.jsx\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 2\n ** module chunks = 0\n **/","/*!\n * ReactFire is an open-source JavaScript library that allows you to add a\n * realtime data source to your React apps by providing an easy way to let\n * Firebase populate the state of React components.\n *\n * ReactFire 1.0.0\n * https://github.com/firebase/reactfire/\n * License: MIT\n */\n/* eslint \"strict\": [2, \"function\"] */\n(function(root, factory) {\n  'use strict';\n\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define([], function() {\n      return (root.ReactFireMixin = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // Global variables\n    root.ReactFireMixin = factory();\n  }\n}(this, function() {\n  'use strict';\n\n  /*************/\n  /*  HELPERS  */\n  /*************/\n  /**\n   * Returns the key of a Firebase snapshot across SDK versions.\n   *\n   * @param {DataSnapshot} snapshot A Firebase snapshot.\n   * @return {string|null} key The Firebase snapshot's key.\n   */\n  function _getKey(snapshot) {\n    var key;\n    if (typeof snapshot.key === 'function') {\n      key = snapshot.key();\n    } else if (typeof snapshot.key === 'string' || snapshot.key === null) {\n      key = snapshot.key;\n    } else {\n      key = snapshot.name();\n    }\n    return key;\n  }\n\n  /**\n   * Returns the reference of a Firebase snapshot or reference across SDK versions.\n   *\n   * @param {DataSnapshot|DatabaseReference} snapshotOrRef A Firebase snapshot or reference.\n   * @return {DatabaseReference} ref The Firebase reference corresponding to the inputted snapshot\n   * or reference.\n   */\n  function _getRef(snapshotOrRef) {\n    var ref;\n    if (typeof snapshotOrRef.ref === 'function') {\n      ref = snapshotOrRef.ref();\n    } else {\n      ref = snapshotOrRef.ref;\n    }\n    return ref;\n  }\n\n  /**\n   * Returns the index of the key in the list. If an item with the key is not in the list, -1 is\n   * returned.\n   *\n   * @param {Array<any>} list A list of items.\n   * @param {string} key The key for which to search.\n   * @return {number} The index of the item which has the provided key or -1 if no items have the\n   * provided key.\n   */\n  function _indexForKey(list, key) {\n    for (var i = 0, length = list.length; i < length; ++i) {\n      if (list[i]['.key'] === key) {\n        return i;\n      }\n    }\n\n    /* istanbul ignore next */\n    return -1;\n  }\n\n  /**\n   * Throws a formatted error message.\n   *\n   * @param {string} message The error message to throw.\n   */\n  function _throwError(message) {\n    throw new Error('ReactFire: ' + message);\n  }\n\n  /**\n   * Validates the name of the variable which is being bound.\n   *\n   * @param {string} bindVar The variable which is being bound.\n   */\n  function _validateBindVar(bindVar) {\n    var errorMessage;\n\n    if (typeof bindVar !== 'string') {\n      errorMessage = 'Bind variable must be a string. Got: ' + bindVar;\n    } else if (bindVar.length === 0) {\n      errorMessage = 'Bind variable must be a non-empty string. Got: \"\"';\n    } else if (bindVar.length > 768) {\n      // Firebase can only stored child paths up to 768 characters\n      errorMessage = 'Bind variable is too long to be stored in Firebase. Got: ' + bindVar;\n    } else if (/[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/.test(bindVar)) {\n      // Firebase does not allow node keys to contain the following characters\n      errorMessage = 'Bind variable cannot contain any of the following characters: . # $ ] [ /. Got: ' + bindVar;\n    }\n\n    if (typeof errorMessage !== 'undefined') {\n      _throwError(errorMessage);\n    }\n  }\n\n  /**\n   * Creates a new record given a key-value pair.\n   *\n   * @param {string} key The new record's key.\n   * @param {any} value The new record's value.\n   * @return {Object} The new record.\n   */\n  function _createRecord(key, value) {\n    var record = {};\n    if (typeof value === 'object' && value !== null) {\n      record = value;\n    } else {\n      record['.value'] = value;\n    }\n    record['.key'] = key;\n\n    return record;\n  }\n\n\n  /******************************/\n  /*  BIND AS OBJECT LISTENERS  */\n  /******************************/\n  /**\n   * 'value' listener which updates the value of the bound state variable.\n   *\n   * @param {string} bindVar The state variable to which the data is being bound.\n   * @param {Firebase.DataSnapshot} snapshot A snapshot of the data being bound.\n   */\n  function _objectValue(bindVar, snapshot) {\n    var key = _getKey(snapshot);\n    var value = snapshot.val();\n\n    this.data[bindVar] = _createRecord(key, value);\n\n    this.setState(this.data);\n  }\n\n\n  /*****************************/\n  /*  BIND AS ARRAY LISTENERS  */\n  /*****************************/\n  /**\n   * 'child_added' listener which adds a new record to the bound array.\n   *\n   * @param {string} bindVar The state variable to which the data is being bound.\n   * @param {Firebase.DataSnapshot} snapshot A snapshot of the data being bound.\n   * @param {string|null} previousChildKey The key of the child after which the provided snapshot\n   * is positioned; null if the provided snapshot is in the first position.\n   */\n  function _arrayChildAdded(bindVar, snapshot, previousChildKey) {\n    var key = _getKey(snapshot);\n    var value = snapshot.val();\n    var array = this.data[bindVar];\n\n    // Determine where to insert the new record\n    var insertionIndex;\n    if (previousChildKey === null) {\n      insertionIndex = 0;\n    } else {\n      var previousChildIndex = _indexForKey(array, previousChildKey);\n      insertionIndex = previousChildIndex + 1;\n    }\n\n    // Add the new record to the array\n    array.splice(insertionIndex, 0, _createRecord(key, value));\n\n    // Update state\n    this.setState(this.data);\n  }\n\n  /**\n   * 'child_removed' listener which removes a record from the bound array.\n   *\n   * @param {string} bindVar The state variable to which the data is bound.\n   * @param {Firebase.DataSnapshot} snapshot A snapshot of the bound data.\n   */\n  function _arrayChildRemoved(bindVar, snapshot) {\n    var array = this.data[bindVar];\n\n    // Look up the record's index in the array\n    var index = _indexForKey(array, _getKey(snapshot));\n\n    // Splice out the record from the array\n    array.splice(index, 1);\n\n    // Update state\n    this.setState(this.data);\n  }\n\n  /**\n   * 'child_changed' listener which updates a record's value in the bound array.\n   *\n   * @param {string} bindVar The state variable to which the data is bound.\n   * @param {Firebase.DataSnapshot} snapshot A snapshot of the data to bind.\n   */\n  function _arrayChildChanged(bindVar, snapshot) {\n    var key = _getKey(snapshot);\n    var value = snapshot.val();\n    var array = this.data[bindVar];\n\n    // Look up the record's index in the array\n    var index = _indexForKey(array, key);\n\n    // Update the record's value in the array\n    array[index] = _createRecord(key, value);\n\n    // Update state\n    this.setState(this.data);\n  }\n\n  /**\n   * 'child_moved' listener which updates a record's position in the bound array.\n   *\n   * @param {string} bindVar The state variable to which the data is bound.\n   * @param {Firebase.DataSnapshot} snapshot A snapshot of the bound data.\n   * @param {string|null} previousChildKey The key of the child after which the provided snapshot\n   * is positioned; null if the provided snapshot is in the first position.\n   */\n  function _arrayChildMoved(bindVar, snapshot, previousChildKey) {\n    var key = _getKey(snapshot);\n    var array = this.data[bindVar];\n\n    // Look up the record's index in the array\n    var currentIndex = _indexForKey(array, key);\n\n    // Splice out the record from the array\n    var record = array.splice(currentIndex, 1)[0];\n\n    // Determine where to re-insert the record\n    var insertionIndex;\n    if (previousChildKey === null) {\n      insertionIndex = 0;\n    } else {\n      var previousChildIndex = _indexForKey(array, previousChildKey);\n      insertionIndex = previousChildIndex + 1;\n    }\n\n    // Re-insert the record into the array\n    array.splice(insertionIndex, 0, record);\n\n    // Update state\n    this.setState(this.data);\n  }\n\n\n  /*************/\n  /*  BINDING  */\n  /*************/\n  /**\n   * Creates a binding between Firebase and the inputted bind variable as either an array or\n   * an object.\n   *\n   * @param {Firebase} firebaseRef The Firebase ref whose data to bind.\n   * @param {string} bindVar The state variable to which to bind the data.\n   * @param {function} cancelCallback The Firebase reference's cancel callback.\n   * @param {boolean} bindAsArray Whether or not to bind as an array or object.\n   */\n  function _bind(firebaseRef, bindVar, cancelCallback, bindAsArray) {\n    if (Object.prototype.toString.call(firebaseRef) !== '[object Object]') {\n      _throwError('Invalid Firebase reference');\n    }\n\n    _validateBindVar(bindVar);\n\n    if (typeof this.firebaseRefs[bindVar] !== 'undefined') {\n      _throwError('this.state.' + bindVar + ' is already bound to a Firebase reference');\n    }\n\n    // Keep track of the Firebase reference we are setting up listeners on\n    this.firebaseRefs[bindVar] = _getRef(firebaseRef);\n\n    if (bindAsArray) {\n      // Set initial state to an empty array\n      this.data[bindVar] = [];\n      this.setState(this.data);\n\n      // Add listeners for all 'child_*' events\n      this.firebaseListeners[bindVar] = {\n        child_added: firebaseRef.on('child_added', _arrayChildAdded.bind(this, bindVar), cancelCallback),\n        child_removed: firebaseRef.on('child_removed', _arrayChildRemoved.bind(this, bindVar), cancelCallback),\n        child_changed: firebaseRef.on('child_changed', _arrayChildChanged.bind(this, bindVar), cancelCallback),\n        child_moved: firebaseRef.on('child_moved', _arrayChildMoved.bind(this, bindVar), cancelCallback)\n      };\n    } else {\n      // Add listener for 'value' event\n      this.firebaseListeners[bindVar] = {\n        value: firebaseRef.on('value', _objectValue.bind(this, bindVar), cancelCallback)\n      };\n    }\n  }\n\n\n  var ReactFireMixin = {\n    /********************/\n    /*  MIXIN LIFETIME  */\n    /********************/\n    /**\n     * Initializes the Firebase refs and listeners arrays.\n     **/\n    componentWillMount: function() {\n      this.data = {};\n      this.firebaseRefs = {};\n      this.firebaseListeners = {};\n    },\n\n    /**\n     * Unbinds any remaining Firebase listeners.\n     */\n    componentWillUnmount: function() {\n      for (var bindVar in this.firebaseRefs) {\n        /* istanbul ignore else */\n        if (this.firebaseRefs.hasOwnProperty(bindVar)) {\n          this.unbind(bindVar);\n        }\n      }\n    },\n\n\n    /*************/\n    /*  BINDING  */\n    /*************/\n    /**\n     * Creates a binding between Firebase and the inputted bind variable as an array.\n     *\n     * @param {Firebase} firebaseRef The Firebase ref whose data to bind.\n     * @param {string} bindVar The state variable to which to bind the data.\n     * @param {function} cancelCallback The Firebase reference's cancel callback.\n     */\n    bindAsArray: function(firebaseRef, bindVar, cancelCallback) {\n      var bindPartial = _bind.bind(this);\n      bindPartial(firebaseRef, bindVar, cancelCallback, /* bindAsArray */ true);\n    },\n\n    /**\n     * Creates a binding between Firebase and the inputted bind variable as an object.\n     *\n     * @param {Firebase} firebaseRef The Firebase ref whose data to bind.\n     * @param {string} bindVar The state variable to which to bind the data.\n     * @param {function} cancelCallback The Firebase reference's cancel callback.\n     */\n    bindAsObject: function(firebaseRef, bindVar, cancelCallback) {\n      var bindPartial = _bind.bind(this);\n      bindPartial(firebaseRef, bindVar, cancelCallback, /* bindAsArray */ false);\n    },\n\n    /**\n     * Removes the binding between Firebase and the inputted bind variable.\n     *\n     * @param {string} bindVar The state variable to which the data is bound.\n     * @param {function} callback Called when the data is unbound and the state has been updated.\n     */\n    unbind: function(bindVar, callback) {\n      _validateBindVar(bindVar);\n\n      if (typeof this.firebaseRefs[bindVar] === 'undefined') {\n        _throwError('this.state.' + bindVar + ' is not bound to a Firebase reference');\n      }\n\n      // Turn off all Firebase listeners\n      for (var event in this.firebaseListeners[bindVar]) {\n        /* istanbul ignore else */\n        if (this.firebaseListeners[bindVar].hasOwnProperty(event)) {\n          var offListener = this.firebaseListeners[bindVar][event];\n          this.firebaseRefs[bindVar].off(event, offListener);\n        }\n      }\n      delete this.firebaseRefs[bindVar];\n      delete this.firebaseListeners[bindVar];\n\n      // Update state\n      var newState = {};\n      newState[bindVar] = undefined;\n      this.setState(newState, callback);\n    }\n  };\n\n  return ReactFireMixin;\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/reactfire/dist/reactfire.js\n ** module id = 3\n ** module chunks = 0\n **/","import React from \"react\";\n\nconst SignIn = React.createClass({\n\n  signIn() {\n    // firebase.google.com/docs/auth/web/github-auth#handle_the_sign-in_flow_with_the_firebase_sdk\n    const provider = new firebase.auth.GithubAuthProvider(); // eslint-disable-line no-undef\n    firebase.auth().signInWithPopup(provider).then((result) => { // eslint-disable-line no-undef\n      const user = result.user;\n      firebase.database().ref(`users/${user.uid}`).set({ // eslint-disable-line no-undef\n        displayName: user.displayName,\n        email: user.email,\n        githubId: user.providerData[0].uid,\n        photoURL: user.photoURL,\n        refreshToken: user.refreshToken,\n        token: result.credential.accessToken\n      });\n    }).catch((error) => console.error(error)); // eslint-disable-line no-undef, no-console\n  },\n\n  render() {\n    return <button onClick={this.signIn}>Sign in with GitHub</button>;\n  }\n});\nexport default SignIn;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/sign-in.jsx\n **/"],"sourceRoot":""}