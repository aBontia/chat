{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///bloc-chat.min.js","webpack:///webpack/bootstrap 873503d8df6b5cc33130","webpack:///./src/index.js","webpack:///./src/components/bloc-chat.jsx","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./~/reactfire/dist/reactfire.js","webpack:///./src/components/sign-in.jsx"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","BlocChat","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_react","_react2","_reactfire","_reactfire2","_signIn","_signIn2","createClass","displayName","messagesRef","firebase","database","ref","usersRef","mixins","getInitialState","messages","user","componentWillMount","self","auth","onAuthStateChanged","authData","setState","bindAsArray","render","_this","_state","state","createElement","length","map","message","index","key","text","onSubmit","e","preventDefault","onClick","push","refs","photoURL","uid","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","ReactFireMixin","apply","undefined","_getKey","snapshot","name","_getRef","snapshotOrRef","_indexForKey","list","i","_throwError","Error","_validateBindVar","bindVar","errorMessage","test","_createRecord","record","_objectValue","val","data","_arrayChildAdded","previousChildKey","insertionIndex","array","previousChildIndex","splice","_arrayChildRemoved","_arrayChildChanged","_arrayChildMoved","currentIndex","_bind","firebaseRef","cancelCallback","prototype","toString","firebaseRefs","firebaseListeners","child_added","on","bind","child_removed","child_changed","child_moved","componentWillUnmount","hasOwnProperty","unbind","bindPartial","bindAsObject","callback","event","offListener","off","newState","SignIn","signIn","provider","GithubAuthProvider","signInWithPopup","then","result","set","email","githubId","providerData","refreshToken","token","credential","accessToken","error","console"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,EAAAG,QAAA,UACA,kBAAAC,gBAAAC,IACAD,QAAA,SAAAJ,GACA,gBAAAC,SACAA,QAAA,SAAAD,EAAAG,QAAA,UAEAJ,EAAA,SAAAC,EAAAD,EAAA,QACCO,KAAA,SAAAC,GACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAT,OAGA,IAAAC,GAAAS,EAAAD,IACAT,WACAW,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAZ,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAW,QAAA,EAGAX,EAAAD,QAvBA,GAAAU,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASP,EAAQD,EAASQ,GAE/B,YExDDP,GAAOD,SACLiB,SACET,EAAQ,KF8DN,SAASP,EAAQD,EAASQ,GAE/B,YAMA,SAASU,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAJzFG,OAAOC,eAAevB,EAAS,cAC7BwB,OAAO,GAKT,IAAIC,GAASjB,EG1EI,GH4EbkB,EAAUR,EAAuBO,GAEjCE,EAAanB,EG7ES,GH+EtBoB,EAAcV,EAAuBS,GAErCE,EAAUrB,EG/EI,GHiFdsB,EAAWZ,EAAuBW,GG/EjCZ,EAAWS,EAAA,WAAMK,aHkFpBC,YAAa,WGhFdC,YAAaC,SAASC,WAAWC,IAAI,YACrCC,SAAUH,SAASC,WAAWC,IAAI,SAElCE,QAAQV,EAAA,YAERW,gBAAe,WACb,OACEC,YACAC,KAAM,OAIVC,mBAAkB,WAChB,GAAMC,GAAOtC,IACb6B,UAASU,OAAOC,mBAAmB,SAACC,GAC9BA,GACFH,EAAKI,UAAUN,KAAMK,MAGzBzC,KAAK2C,YAAY3C,KAAK4B,YAAa,aAGrCgB,OAAM,WHoFH,GAAIC,GAAQ7C,KAGR8C,EGrFsB9C,KAAK+C,MAAxBZ,EAAQW,EAARX,SAAUC,EAAIU,EAAJV,IAClB,OAAQA,GACNf,EAAA,WAAA2B,cHwFC,MACA,KGvFGb,EAASc,OAASd,EAASe,IAAI,SAACC,EAASC,GHyF1C,MGxFG/B,GAAA,WAAA2B,cHyFD,OGzFMK,IAAKD,GACR/B,EAAA,WAAA2B,cH2FD,IACA,KG5FKG,EAAQf,KAAKT,aACjBN,EAAA,WAAA2B,cH+FD,OACA,KGhGQG,EAAQG,SACP,oBAEdjC,EAAA,WAAA2B,cHmGC,QGnGKO,SAAU,SAACC,GHqGZ,MGrGkBA,GAAEC,mBACvBpC,EAAA,WAAA2B,cAAA,SAAOjB,IAAI,SACXV,EAAA,WAAA2B,cHuGC,UGvGOU,QAAS,WHyGZ,MGxGHb,GAAKjB,YAAY+B,MACfL,KAAMT,EAAKe,KAAKN,KAAKnC,MACrBiB,MACET,YAAaS,EAAKT,YAClBkC,SAAUzB,EAAKyB,SACfC,IAAK1B,EAAK0B,SH6Gf,UG9HQzC,EAAA,WAAA2B,cAAAvB,EAAA,mBHoIlB9B,GAAQ,WG1GMiB,EH2GdhB,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,GIzKvBC,EAAAD,QAAAM,GJ+KM,SAASL,EAAQD,EAASQ,GK/KhC,GAAA4D,GAAAC;;;;;;;;;CAUA,SAAAvE,EAAAC,GACA,YAKAqE,MAAAC,EAAA,WACA,MAAAvE,GAAAwE,eAAAvE,KACKwE,MAAAvE,EAAAoE,KAAAI,SAAAH,IAAApE,EAAAD,QAAAqE,KAQJhE,KAAA,WACD,YAWA,SAAAoE,GAAAC,GACA,GAAAhB,EAQA,OANAA,GADA,kBAAAgB,GAAAhB,IACAgB,EAAAhB,MACK,gBAAAgB,GAAAhB,KAAA,OAAAgB,EAAAhB,IACLgB,EAAAhB,IAEAgB,EAAAC,OAYA,QAAAC,GAAAC,GACA,GAAAzC,EAMA,OAJAA,GADA,kBAAAyC,GAAAzC,IACAyC,EAAAzC,MAEAyC,EAAAzC,IAcA,QAAA0C,GAAAC,EAAArB,GACA,OAAAsB,GAAA,EAAA1B,EAAAyB,EAAAzB,OAAyC0B,EAAA1B,IAAY0B,EACrD,GAAAD,EAAAC,GAAA,UAAAtB,EACA,MAAAsB,EAKA,UAQA,QAAAC,GAAAzB,GACA,SAAA0B,OAAA,cAAA1B,GAQA,QAAA2B,GAAAC,GACA,GAAAC,EAEA,iBAAAD,GACAC,EAAA,wCAAAD,EACK,IAAAA,EAAA9B,OACL+B,EAAA,oDACKD,EAAA9B,OAAA,IAEL+B,EAAA,4DAAAD,EACK,iCAAAE,KAAAF,KAELC,EAAA,mFAAAD,GAGA,mBAAAC,IACAJ,EAAAI,GAWA,QAAAE,GAAA7B,EAAAlC,GACA,GAAAgE,KAQA,OAPA,gBAAAhE,IAAA,OAAAA,EACAgE,EAAAhE,EAEAgE,EAAA,UAAAhE,EAEAgE,EAAA,QAAA9B,EAEA8B,EAaA,QAAAC,GAAAL,EAAAV,GACA,GAAAhB,GAAAe,EAAAC,GACAlD,EAAAkD,EAAAgB,KAEArF,MAAAsF,KAAAP,GAAAG,EAAA7B,EAAAlC,GAEAnB,KAAA0C,SAAA1C,KAAAsF,MAeA,QAAAC,GAAAR,EAAAV,EAAAmB,GACA,GAKAC,GALApC,EAAAe,EAAAC,GACAlD,EAAAkD,EAAAgB,MACAK,EAAA1F,KAAAsF,KAAAP,EAIA,WAAAS,EACAC,EAAA,MACK,CACL,GAAAE,GAAAlB,EAAAiB,EAAAF,EACAC,GAAAE,EAAA,EAIAD,EAAAE,OAAAH,EAAA,EAAAP,EAAA7B,EAAAlC,IAGAnB,KAAA0C,SAAA1C,KAAAsF,MASA,QAAAO,GAAAd,EAAAV,GACA,GAAAqB,GAAA1F,KAAAsF,KAAAP,GAGA3B,EAAAqB,EAAAiB,EAAAtB,EAAAC,GAGAqB,GAAAE,OAAAxC,EAAA,GAGApD,KAAA0C,SAAA1C,KAAAsF,MASA,QAAAQ,GAAAf,EAAAV,GACA,GAAAhB,GAAAe,EAAAC,GACAlD,EAAAkD,EAAAgB,MACAK,EAAA1F,KAAAsF,KAAAP,GAGA3B,EAAAqB,EAAAiB,EAAArC,EAGAqC,GAAAtC,GAAA8B,EAAA7B,EAAAlC,GAGAnB,KAAA0C,SAAA1C,KAAAsF,MAWA,QAAAS,GAAAhB,EAAAV,EAAAmB,GACA,GAUAC,GAVApC,EAAAe,EAAAC,GACAqB,EAAA1F,KAAAsF,KAAAP,GAGAiB,EAAAvB,EAAAiB,EAAArC,GAGA8B,EAAAO,EAAAE,OAAAI,EAAA,KAIA,WAAAR,EACAC,EAAA,MACK,CACL,GAAAE,GAAAlB,EAAAiB,EAAAF,EACAC,GAAAE,EAAA,EAIAD,EAAAE,OAAAH,EAAA,EAAAN,GAGAnF,KAAA0C,SAAA1C,KAAAsF,MAgBA,QAAAW,GAAAC,EAAAnB,EAAAoB,EAAAxD,GACA,oBAAA1B,OAAAmF,UAAAC,SAAA7F,KAAA0F,IACAtB,EAAA,8BAGAE,EAAAC,GAEA,mBAAA/E,MAAAsG,aAAAvB,IACAH,EAAA,cAAAG,EAAA,6CAIA/E,KAAAsG,aAAAvB,GAAAR,EAAA2B,GAEAvD,GAEA3C,KAAAsF,KAAAP,MACA/E,KAAA0C,SAAA1C,KAAAsF,MAGAtF,KAAAuG,kBAAAxB,IACAyB,YAAAN,EAAAO,GAAA,cAAAlB,EAAAmB,KAAA1G,KAAA+E,GAAAoB,GACAQ,cAAAT,EAAAO,GAAA,gBAAAZ,EAAAa,KAAA1G,KAAA+E,GAAAoB,GACAS,cAAAV,EAAAO,GAAA,gBAAAX,EAAAY,KAAA1G,KAAA+E,GAAAoB,GACAU,YAAAX,EAAAO,GAAA,cAAAV,EAAAW,KAAA1G,KAAA+E,GAAAoB,KAIAnG,KAAAuG,kBAAAxB,IACA5D,MAAA+E,EAAAO,GAAA,QAAArB,EAAAsB,KAAA1G,KAAA+E,GAAAoB,IAMA,GAAAlC,IAOA5B,mBAAA,WACArC,KAAAsF,QACAtF,KAAAsG,gBACAtG,KAAAuG,sBAMAO,qBAAA,WACA,OAAA/B,KAAA/E,MAAAsG,aAEAtG,KAAAsG,aAAAS,eAAAhC,IACA/E,KAAAgH,OAAAjC,IAgBApC,YAAA,SAAAuD,EAAAnB,EAAAoB,GACA,GAAAc,GAAAhB,EAAAS,KAAA1G,KACAiH,GAAAf,EAAAnB,EAAAoB,GAAA,IAUAe,aAAA,SAAAhB,EAAAnB,EAAAoB,GACA,GAAAc,GAAAhB,EAAAS,KAAA1G,KACAiH,GAAAf,EAAAnB,EAAAoB,GAAA,IASAa,OAAA,SAAAjC,EAAAoC,GACArC,EAAAC,GAEA,mBAAA/E,MAAAsG,aAAAvB,IACAH,EAAA,cAAAG,EAAA,wCAIA,QAAAqC,KAAApH,MAAAuG,kBAAAxB,GAEA,GAAA/E,KAAAuG,kBAAAxB,GAAAgC,eAAAK,GAAA,CACA,GAAAC,GAAArH,KAAAuG,kBAAAxB,GAAAqC,EACApH,MAAAsG,aAAAvB,GAAAuC,IAAAF,EAAAC,SAGArH,MAAAsG,aAAAvB,SACA/E,MAAAuG,kBAAAxB,EAGA,IAAAwC,KACAA,GAAAxC,GAAAZ,OACAnE,KAAA0C,SAAA6E,EAAAJ,IAIA,OAAAlD,MLuLM,SAASrE,EAAQD,EAASQ,GAE/B,YAMA,SAASU,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAJzFG,OAAOC,eAAevB,EAAS,cAC7BwB,OAAO,GAKT,IAAIC,GAASjB,EM/kBI,GNilBbkB,EAAUR,EAAuBO,GM/kBhCoG,EAASnG,EAAA,WAAMK,aNklBlBC,YAAa,SMhlBd8F,OAAM,WAEJ,GAAMC,GAAW,GAAI7F,UAASU,KAAKoF,kBACnC9F,UAASU,OAAOqF,gBAAgBF,GAAUG,KAAK,SAACC,GAC9C,GAAM1F,GAAO0F,EAAO1F,IACpBP,UAASC,WAAWC,IAAG,SAAUK,EAAK0B,KAAOiE,KAC3CpG,YAAaS,EAAKT,YAClBqG,MAAO5F,EAAK4F,MACZC,SAAU7F,EAAK8F,aAAa,GAAGpE,IAC/BD,SAAUzB,EAAKyB,SACfsE,aAAc/F,EAAK+F,aACnBC,MAAON,EAAOO,WAAWC,gBAE3B,SAAO,SAACC,GNolBP,MMplBiBC,SAAQD,MAAMA,MAGpC3F,OAAM,WACJ,MAAOvB,GAAA,WAAA2B,cNslBJ,UMtlBYU,QAAS1D,KAAKyH,QNwlB1B,yBAIN9H,GAAQ,WMzlBM6H,EN0lBd5H,EAAOD,QAAUA,EAAQ","file":"bloc-chat.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"BlocChat\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"BlocChat\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"BlocChat\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"BlocChat\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t  BlocChat: __webpack_require__(1)\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactfire = __webpack_require__(3);\n\t\n\tvar _reactfire2 = _interopRequireDefault(_reactfire);\n\t\n\tvar _signIn = __webpack_require__(4);\n\t\n\tvar _signIn2 = _interopRequireDefault(_signIn);\n\t\n\tvar BlocChat = _react2[\"default\"].createClass({\n\t  displayName: \"BlocChat\",\n\t\n\t  messagesRef: firebase.database().ref(\"messages\"), // eslint-disable-line no-undef\n\t  usersRef: firebase.database().ref(\"users\"), // eslint-disable-line no-undef\n\t\n\t  mixins: [_reactfire2[\"default\"]],\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      messages: [],\n\t      user: null\n\t    };\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    var self = this;\n\t    firebase.auth().onAuthStateChanged(function (authData) {\n\t      // eslint-disable-line no-undef\n\t      if (authData) {\n\t        self.setState({ user: authData });\n\t      }\n\t    });\n\t    this.bindAsArray(this.messagesRef, \"messages\");\n\t  },\n\t\n\t  render: function render() {\n\t    var _this = this;\n\t\n\t    // console.log(\"BlocChat:render\", this.state);\n\t    var _state = this.state;\n\t    var messages = _state.messages;\n\t    var user = _state.user;\n\t\n\t    return !user ? _react2[\"default\"].createElement(_signIn2[\"default\"], null) : _react2[\"default\"].createElement(\n\t      \"div\",\n\t      null,\n\t      messages.length ? messages.map(function (message, index) {\n\t        return _react2[\"default\"].createElement(\n\t          \"div\",\n\t          { key: index },\n\t          _react2[\"default\"].createElement(\n\t            \"b\",\n\t            null,\n\t            message.user.displayName\n\t          ),\n\t          _react2[\"default\"].createElement(\n\t            \"span\",\n\t            null,\n\t            message.text\n\t          )\n\t        );\n\t      }) : \"Loading messages…\",\n\t      _react2[\"default\"].createElement(\n\t        \"form\",\n\t        { onSubmit: function (e) {\n\t            return e.preventDefault();\n\t          } },\n\t        _react2[\"default\"].createElement(\"input\", { ref: \"text\" }),\n\t        _react2[\"default\"].createElement(\n\t          \"button\",\n\t          { onClick: function () {\n\t              return _this.messagesRef.push({\n\t                text: _this.refs.text.value,\n\t                user: {\n\t                  displayName: user.displayName,\n\t                  photoURL: user.photoURL,\n\t                  uid: user.uid\n\t                }\n\t              });\n\t            }\n\t          },\n\t          \"Send\"\n\t        )\n\t      )\n\t    );\n\t  }\n\t});\n\texports[\"default\"] = BlocChat;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * ReactFire is an open-source JavaScript library that allows you to add a\n\t * realtime data source to your React apps by providing an easy way to let\n\t * Firebase populate the state of React components.\n\t *\n\t * ReactFire 1.0.0\n\t * https://github.com/firebase/reactfire/\n\t * License: MIT\n\t */\n\t/* eslint \"strict\": [2, \"function\"] */\n\t(function(root, factory) {\n\t  'use strict';\n\t\n\t  /* istanbul ignore next */\n\t  if (true) {\n\t    // AMD\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return (root.ReactFireMixin = factory());\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports === 'object') {\n\t    // CommonJS\n\t    module.exports = factory();\n\t  } else {\n\t    // Global variables\n\t    root.ReactFireMixin = factory();\n\t  }\n\t}(this, function() {\n\t  'use strict';\n\t\n\t  /*************/\n\t  /*  HELPERS  */\n\t  /*************/\n\t  /**\n\t   * Returns the key of a Firebase snapshot across SDK versions.\n\t   *\n\t   * @param {DataSnapshot} snapshot A Firebase snapshot.\n\t   * @return {string|null} key The Firebase snapshot's key.\n\t   */\n\t  function _getKey(snapshot) {\n\t    var key;\n\t    if (typeof snapshot.key === 'function') {\n\t      key = snapshot.key();\n\t    } else if (typeof snapshot.key === 'string' || snapshot.key === null) {\n\t      key = snapshot.key;\n\t    } else {\n\t      key = snapshot.name();\n\t    }\n\t    return key;\n\t  }\n\t\n\t  /**\n\t   * Returns the reference of a Firebase snapshot or reference across SDK versions.\n\t   *\n\t   * @param {DataSnapshot|DatabaseReference} snapshotOrRef A Firebase snapshot or reference.\n\t   * @return {DatabaseReference} ref The Firebase reference corresponding to the inputted snapshot\n\t   * or reference.\n\t   */\n\t  function _getRef(snapshotOrRef) {\n\t    var ref;\n\t    if (typeof snapshotOrRef.ref === 'function') {\n\t      ref = snapshotOrRef.ref();\n\t    } else {\n\t      ref = snapshotOrRef.ref;\n\t    }\n\t    return ref;\n\t  }\n\t\n\t  /**\n\t   * Returns the index of the key in the list. If an item with the key is not in the list, -1 is\n\t   * returned.\n\t   *\n\t   * @param {Array<any>} list A list of items.\n\t   * @param {string} key The key for which to search.\n\t   * @return {number} The index of the item which has the provided key or -1 if no items have the\n\t   * provided key.\n\t   */\n\t  function _indexForKey(list, key) {\n\t    for (var i = 0, length = list.length; i < length; ++i) {\n\t      if (list[i]['.key'] === key) {\n\t        return i;\n\t      }\n\t    }\n\t\n\t    /* istanbul ignore next */\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Throws a formatted error message.\n\t   *\n\t   * @param {string} message The error message to throw.\n\t   */\n\t  function _throwError(message) {\n\t    throw new Error('ReactFire: ' + message);\n\t  }\n\t\n\t  /**\n\t   * Validates the name of the variable which is being bound.\n\t   *\n\t   * @param {string} bindVar The variable which is being bound.\n\t   */\n\t  function _validateBindVar(bindVar) {\n\t    var errorMessage;\n\t\n\t    if (typeof bindVar !== 'string') {\n\t      errorMessage = 'Bind variable must be a string. Got: ' + bindVar;\n\t    } else if (bindVar.length === 0) {\n\t      errorMessage = 'Bind variable must be a non-empty string. Got: \"\"';\n\t    } else if (bindVar.length > 768) {\n\t      // Firebase can only stored child paths up to 768 characters\n\t      errorMessage = 'Bind variable is too long to be stored in Firebase. Got: ' + bindVar;\n\t    } else if (/[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/.test(bindVar)) {\n\t      // Firebase does not allow node keys to contain the following characters\n\t      errorMessage = 'Bind variable cannot contain any of the following characters: . # $ ] [ /. Got: ' + bindVar;\n\t    }\n\t\n\t    if (typeof errorMessage !== 'undefined') {\n\t      _throwError(errorMessage);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Creates a new record given a key-value pair.\n\t   *\n\t   * @param {string} key The new record's key.\n\t   * @param {any} value The new record's value.\n\t   * @return {Object} The new record.\n\t   */\n\t  function _createRecord(key, value) {\n\t    var record = {};\n\t    if (typeof value === 'object' && value !== null) {\n\t      record = value;\n\t    } else {\n\t      record['.value'] = value;\n\t    }\n\t    record['.key'] = key;\n\t\n\t    return record;\n\t  }\n\t\n\t\n\t  /******************************/\n\t  /*  BIND AS OBJECT LISTENERS  */\n\t  /******************************/\n\t  /**\n\t   * 'value' listener which updates the value of the bound state variable.\n\t   *\n\t   * @param {string} bindVar The state variable to which the data is being bound.\n\t   * @param {Firebase.DataSnapshot} snapshot A snapshot of the data being bound.\n\t   */\n\t  function _objectValue(bindVar, snapshot) {\n\t    var key = _getKey(snapshot);\n\t    var value = snapshot.val();\n\t\n\t    this.data[bindVar] = _createRecord(key, value);\n\t\n\t    this.setState(this.data);\n\t  }\n\t\n\t\n\t  /*****************************/\n\t  /*  BIND AS ARRAY LISTENERS  */\n\t  /*****************************/\n\t  /**\n\t   * 'child_added' listener which adds a new record to the bound array.\n\t   *\n\t   * @param {string} bindVar The state variable to which the data is being bound.\n\t   * @param {Firebase.DataSnapshot} snapshot A snapshot of the data being bound.\n\t   * @param {string|null} previousChildKey The key of the child after which the provided snapshot\n\t   * is positioned; null if the provided snapshot is in the first position.\n\t   */\n\t  function _arrayChildAdded(bindVar, snapshot, previousChildKey) {\n\t    var key = _getKey(snapshot);\n\t    var value = snapshot.val();\n\t    var array = this.data[bindVar];\n\t\n\t    // Determine where to insert the new record\n\t    var insertionIndex;\n\t    if (previousChildKey === null) {\n\t      insertionIndex = 0;\n\t    } else {\n\t      var previousChildIndex = _indexForKey(array, previousChildKey);\n\t      insertionIndex = previousChildIndex + 1;\n\t    }\n\t\n\t    // Add the new record to the array\n\t    array.splice(insertionIndex, 0, _createRecord(key, value));\n\t\n\t    // Update state\n\t    this.setState(this.data);\n\t  }\n\t\n\t  /**\n\t   * 'child_removed' listener which removes a record from the bound array.\n\t   *\n\t   * @param {string} bindVar The state variable to which the data is bound.\n\t   * @param {Firebase.DataSnapshot} snapshot A snapshot of the bound data.\n\t   */\n\t  function _arrayChildRemoved(bindVar, snapshot) {\n\t    var array = this.data[bindVar];\n\t\n\t    // Look up the record's index in the array\n\t    var index = _indexForKey(array, _getKey(snapshot));\n\t\n\t    // Splice out the record from the array\n\t    array.splice(index, 1);\n\t\n\t    // Update state\n\t    this.setState(this.data);\n\t  }\n\t\n\t  /**\n\t   * 'child_changed' listener which updates a record's value in the bound array.\n\t   *\n\t   * @param {string} bindVar The state variable to which the data is bound.\n\t   * @param {Firebase.DataSnapshot} snapshot A snapshot of the data to bind.\n\t   */\n\t  function _arrayChildChanged(bindVar, snapshot) {\n\t    var key = _getKey(snapshot);\n\t    var value = snapshot.val();\n\t    var array = this.data[bindVar];\n\t\n\t    // Look up the record's index in the array\n\t    var index = _indexForKey(array, key);\n\t\n\t    // Update the record's value in the array\n\t    array[index] = _createRecord(key, value);\n\t\n\t    // Update state\n\t    this.setState(this.data);\n\t  }\n\t\n\t  /**\n\t   * 'child_moved' listener which updates a record's position in the bound array.\n\t   *\n\t   * @param {string} bindVar The state variable to which the data is bound.\n\t   * @param {Firebase.DataSnapshot} snapshot A snapshot of the bound data.\n\t   * @param {string|null} previousChildKey The key of the child after which the provided snapshot\n\t   * is positioned; null if the provided snapshot is in the first position.\n\t   */\n\t  function _arrayChildMoved(bindVar, snapshot, previousChildKey) {\n\t    var key = _getKey(snapshot);\n\t    var array = this.data[bindVar];\n\t\n\t    // Look up the record's index in the array\n\t    var currentIndex = _indexForKey(array, key);\n\t\n\t    // Splice out the record from the array\n\t    var record = array.splice(currentIndex, 1)[0];\n\t\n\t    // Determine where to re-insert the record\n\t    var insertionIndex;\n\t    if (previousChildKey === null) {\n\t      insertionIndex = 0;\n\t    } else {\n\t      var previousChildIndex = _indexForKey(array, previousChildKey);\n\t      insertionIndex = previousChildIndex + 1;\n\t    }\n\t\n\t    // Re-insert the record into the array\n\t    array.splice(insertionIndex, 0, record);\n\t\n\t    // Update state\n\t    this.setState(this.data);\n\t  }\n\t\n\t\n\t  /*************/\n\t  /*  BINDING  */\n\t  /*************/\n\t  /**\n\t   * Creates a binding between Firebase and the inputted bind variable as either an array or\n\t   * an object.\n\t   *\n\t   * @param {Firebase} firebaseRef The Firebase ref whose data to bind.\n\t   * @param {string} bindVar The state variable to which to bind the data.\n\t   * @param {function} cancelCallback The Firebase reference's cancel callback.\n\t   * @param {boolean} bindAsArray Whether or not to bind as an array or object.\n\t   */\n\t  function _bind(firebaseRef, bindVar, cancelCallback, bindAsArray) {\n\t    if (Object.prototype.toString.call(firebaseRef) !== '[object Object]') {\n\t      _throwError('Invalid Firebase reference');\n\t    }\n\t\n\t    _validateBindVar(bindVar);\n\t\n\t    if (typeof this.firebaseRefs[bindVar] !== 'undefined') {\n\t      _throwError('this.state.' + bindVar + ' is already bound to a Firebase reference');\n\t    }\n\t\n\t    // Keep track of the Firebase reference we are setting up listeners on\n\t    this.firebaseRefs[bindVar] = _getRef(firebaseRef);\n\t\n\t    if (bindAsArray) {\n\t      // Set initial state to an empty array\n\t      this.data[bindVar] = [];\n\t      this.setState(this.data);\n\t\n\t      // Add listeners for all 'child_*' events\n\t      this.firebaseListeners[bindVar] = {\n\t        child_added: firebaseRef.on('child_added', _arrayChildAdded.bind(this, bindVar), cancelCallback),\n\t        child_removed: firebaseRef.on('child_removed', _arrayChildRemoved.bind(this, bindVar), cancelCallback),\n\t        child_changed: firebaseRef.on('child_changed', _arrayChildChanged.bind(this, bindVar), cancelCallback),\n\t        child_moved: firebaseRef.on('child_moved', _arrayChildMoved.bind(this, bindVar), cancelCallback)\n\t      };\n\t    } else {\n\t      // Add listener for 'value' event\n\t      this.firebaseListeners[bindVar] = {\n\t        value: firebaseRef.on('value', _objectValue.bind(this, bindVar), cancelCallback)\n\t      };\n\t    }\n\t  }\n\t\n\t\n\t  var ReactFireMixin = {\n\t    /********************/\n\t    /*  MIXIN LIFETIME  */\n\t    /********************/\n\t    /**\n\t     * Initializes the Firebase refs and listeners arrays.\n\t     **/\n\t    componentWillMount: function() {\n\t      this.data = {};\n\t      this.firebaseRefs = {};\n\t      this.firebaseListeners = {};\n\t    },\n\t\n\t    /**\n\t     * Unbinds any remaining Firebase listeners.\n\t     */\n\t    componentWillUnmount: function() {\n\t      for (var bindVar in this.firebaseRefs) {\n\t        /* istanbul ignore else */\n\t        if (this.firebaseRefs.hasOwnProperty(bindVar)) {\n\t          this.unbind(bindVar);\n\t        }\n\t      }\n\t    },\n\t\n\t\n\t    /*************/\n\t    /*  BINDING  */\n\t    /*************/\n\t    /**\n\t     * Creates a binding between Firebase and the inputted bind variable as an array.\n\t     *\n\t     * @param {Firebase} firebaseRef The Firebase ref whose data to bind.\n\t     * @param {string} bindVar The state variable to which to bind the data.\n\t     * @param {function} cancelCallback The Firebase reference's cancel callback.\n\t     */\n\t    bindAsArray: function(firebaseRef, bindVar, cancelCallback) {\n\t      var bindPartial = _bind.bind(this);\n\t      bindPartial(firebaseRef, bindVar, cancelCallback, /* bindAsArray */ true);\n\t    },\n\t\n\t    /**\n\t     * Creates a binding between Firebase and the inputted bind variable as an object.\n\t     *\n\t     * @param {Firebase} firebaseRef The Firebase ref whose data to bind.\n\t     * @param {string} bindVar The state variable to which to bind the data.\n\t     * @param {function} cancelCallback The Firebase reference's cancel callback.\n\t     */\n\t    bindAsObject: function(firebaseRef, bindVar, cancelCallback) {\n\t      var bindPartial = _bind.bind(this);\n\t      bindPartial(firebaseRef, bindVar, cancelCallback, /* bindAsArray */ false);\n\t    },\n\t\n\t    /**\n\t     * Removes the binding between Firebase and the inputted bind variable.\n\t     *\n\t     * @param {string} bindVar The state variable to which the data is bound.\n\t     * @param {function} callback Called when the data is unbound and the state has been updated.\n\t     */\n\t    unbind: function(bindVar, callback) {\n\t      _validateBindVar(bindVar);\n\t\n\t      if (typeof this.firebaseRefs[bindVar] === 'undefined') {\n\t        _throwError('this.state.' + bindVar + ' is not bound to a Firebase reference');\n\t      }\n\t\n\t      // Turn off all Firebase listeners\n\t      for (var event in this.firebaseListeners[bindVar]) {\n\t        /* istanbul ignore else */\n\t        if (this.firebaseListeners[bindVar].hasOwnProperty(event)) {\n\t          var offListener = this.firebaseListeners[bindVar][event];\n\t          this.firebaseRefs[bindVar].off(event, offListener);\n\t        }\n\t      }\n\t      delete this.firebaseRefs[bindVar];\n\t      delete this.firebaseListeners[bindVar];\n\t\n\t      // Update state\n\t      var newState = {};\n\t      newState[bindVar] = undefined;\n\t      this.setState(newState, callback);\n\t    }\n\t  };\n\t\n\t  return ReactFireMixin;\n\t}));\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar SignIn = _react2[\"default\"].createClass({\n\t  displayName: \"SignIn\",\n\t\n\t  signIn: function signIn() {\n\t    // firebase.google.com/docs/auth/web/github-auth#handle_the_sign-in_flow_with_the_firebase_sdk\n\t    var provider = new firebase.auth.GithubAuthProvider(); // eslint-disable-line no-undef\n\t    firebase.auth().signInWithPopup(provider).then(function (result) {\n\t      // eslint-disable-line no-undef\n\t      var user = result.user;\n\t      firebase.database().ref(\"users/\" + user.uid).set({ // eslint-disable-line no-undef\n\t        displayName: user.displayName,\n\t        email: user.email,\n\t        githubId: user.providerData[0].uid,\n\t        photoURL: user.photoURL,\n\t        refreshToken: user.refreshToken,\n\t        token: result.credential.accessToken\n\t      });\n\t    })[\"catch\"](function (error) {\n\t      return console.error(error);\n\t    }); // eslint-disable-line no-undef, no-console\n\t  },\n\t\n\t  render: function render() {\n\t    return _react2[\"default\"].createElement(\n\t      \"button\",\n\t      { onClick: this.signIn },\n\t      \"Sign in with GitHub\"\n\t    );\n\t  }\n\t});\n\texports[\"default\"] = SignIn;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** bloc-chat.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 873503d8df6b5cc33130\n **/","module.exports = {\n  BlocChat:\n    require(\"./components/bloc-chat\")\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import React from \"react\";\nimport ReactFireMixin from \"reactfire\";\n\nimport SignIn from \"./sign-in\";\n\nconst BlocChat = React.createClass({\n\n  messagesRef: firebase.database().ref(\"messages\"), // eslint-disable-line no-undef\n  usersRef: firebase.database().ref(\"users\"), // eslint-disable-line no-undef\n\n  mixins: [ReactFireMixin],\n\n  getInitialState() {\n    return {\n      messages: [],\n      user: null\n    };\n  },\n\n  componentWillMount() {\n    const self = this;\n    firebase.auth().onAuthStateChanged((authData) => { // eslint-disable-line no-undef\n      if (authData) {\n        self.setState({user: authData});\n      }\n    });\n    this.bindAsArray(this.messagesRef, \"messages\");\n  },\n\n  render() {\n    // console.log(\"BlocChat:render\", this.state);\n    const { messages, user } = this.state;\n    return !user ? <SignIn /> : (\n      <div>\n        {\n          messages.length ? messages.map((message, index) =>\n            <div key={index}>\n              <b>{message.user.displayName}</b>\n              <span>{message.text}</span>\n            </div>) : \"Loading messages…\"\n        }\n        <form onSubmit={(e) => e.preventDefault()}>\n          <input ref=\"text\"/>\n          <button onClick={() =>\n            this.messagesRef.push({\n              text: this.refs.text.value,\n              user: {\n                displayName: user.displayName,\n                photoURL: user.photoURL,\n                uid: user.uid\n              }\n            })}\n          >Send</button>\n        </form>\n      </div>\n    );\n  }\n});\nexport default BlocChat;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/bloc-chat.jsx\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 2\n ** module chunks = 0\n **/","/*!\n * ReactFire is an open-source JavaScript library that allows you to add a\n * realtime data source to your React apps by providing an easy way to let\n * Firebase populate the state of React components.\n *\n * ReactFire 1.0.0\n * https://github.com/firebase/reactfire/\n * License: MIT\n */\n/* eslint \"strict\": [2, \"function\"] */\n(function(root, factory) {\n  'use strict';\n\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define([], function() {\n      return (root.ReactFireMixin = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // Global variables\n    root.ReactFireMixin = factory();\n  }\n}(this, function() {\n  'use strict';\n\n  /*************/\n  /*  HELPERS  */\n  /*************/\n  /**\n   * Returns the key of a Firebase snapshot across SDK versions.\n   *\n   * @param {DataSnapshot} snapshot A Firebase snapshot.\n   * @return {string|null} key The Firebase snapshot's key.\n   */\n  function _getKey(snapshot) {\n    var key;\n    if (typeof snapshot.key === 'function') {\n      key = snapshot.key();\n    } else if (typeof snapshot.key === 'string' || snapshot.key === null) {\n      key = snapshot.key;\n    } else {\n      key = snapshot.name();\n    }\n    return key;\n  }\n\n  /**\n   * Returns the reference of a Firebase snapshot or reference across SDK versions.\n   *\n   * @param {DataSnapshot|DatabaseReference} snapshotOrRef A Firebase snapshot or reference.\n   * @return {DatabaseReference} ref The Firebase reference corresponding to the inputted snapshot\n   * or reference.\n   */\n  function _getRef(snapshotOrRef) {\n    var ref;\n    if (typeof snapshotOrRef.ref === 'function') {\n      ref = snapshotOrRef.ref();\n    } else {\n      ref = snapshotOrRef.ref;\n    }\n    return ref;\n  }\n\n  /**\n   * Returns the index of the key in the list. If an item with the key is not in the list, -1 is\n   * returned.\n   *\n   * @param {Array<any>} list A list of items.\n   * @param {string} key The key for which to search.\n   * @return {number} The index of the item which has the provided key or -1 if no items have the\n   * provided key.\n   */\n  function _indexForKey(list, key) {\n    for (var i = 0, length = list.length; i < length; ++i) {\n      if (list[i]['.key'] === key) {\n        return i;\n      }\n    }\n\n    /* istanbul ignore next */\n    return -1;\n  }\n\n  /**\n   * Throws a formatted error message.\n   *\n   * @param {string} message The error message to throw.\n   */\n  function _throwError(message) {\n    throw new Error('ReactFire: ' + message);\n  }\n\n  /**\n   * Validates the name of the variable which is being bound.\n   *\n   * @param {string} bindVar The variable which is being bound.\n   */\n  function _validateBindVar(bindVar) {\n    var errorMessage;\n\n    if (typeof bindVar !== 'string') {\n      errorMessage = 'Bind variable must be a string. Got: ' + bindVar;\n    } else if (bindVar.length === 0) {\n      errorMessage = 'Bind variable must be a non-empty string. Got: \"\"';\n    } else if (bindVar.length > 768) {\n      // Firebase can only stored child paths up to 768 characters\n      errorMessage = 'Bind variable is too long to be stored in Firebase. Got: ' + bindVar;\n    } else if (/[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/.test(bindVar)) {\n      // Firebase does not allow node keys to contain the following characters\n      errorMessage = 'Bind variable cannot contain any of the following characters: . # $ ] [ /. Got: ' + bindVar;\n    }\n\n    if (typeof errorMessage !== 'undefined') {\n      _throwError(errorMessage);\n    }\n  }\n\n  /**\n   * Creates a new record given a key-value pair.\n   *\n   * @param {string} key The new record's key.\n   * @param {any} value The new record's value.\n   * @return {Object} The new record.\n   */\n  function _createRecord(key, value) {\n    var record = {};\n    if (typeof value === 'object' && value !== null) {\n      record = value;\n    } else {\n      record['.value'] = value;\n    }\n    record['.key'] = key;\n\n    return record;\n  }\n\n\n  /******************************/\n  /*  BIND AS OBJECT LISTENERS  */\n  /******************************/\n  /**\n   * 'value' listener which updates the value of the bound state variable.\n   *\n   * @param {string} bindVar The state variable to which the data is being bound.\n   * @param {Firebase.DataSnapshot} snapshot A snapshot of the data being bound.\n   */\n  function _objectValue(bindVar, snapshot) {\n    var key = _getKey(snapshot);\n    var value = snapshot.val();\n\n    this.data[bindVar] = _createRecord(key, value);\n\n    this.setState(this.data);\n  }\n\n\n  /*****************************/\n  /*  BIND AS ARRAY LISTENERS  */\n  /*****************************/\n  /**\n   * 'child_added' listener which adds a new record to the bound array.\n   *\n   * @param {string} bindVar The state variable to which the data is being bound.\n   * @param {Firebase.DataSnapshot} snapshot A snapshot of the data being bound.\n   * @param {string|null} previousChildKey The key of the child after which the provided snapshot\n   * is positioned; null if the provided snapshot is in the first position.\n   */\n  function _arrayChildAdded(bindVar, snapshot, previousChildKey) {\n    var key = _getKey(snapshot);\n    var value = snapshot.val();\n    var array = this.data[bindVar];\n\n    // Determine where to insert the new record\n    var insertionIndex;\n    if (previousChildKey === null) {\n      insertionIndex = 0;\n    } else {\n      var previousChildIndex = _indexForKey(array, previousChildKey);\n      insertionIndex = previousChildIndex + 1;\n    }\n\n    // Add the new record to the array\n    array.splice(insertionIndex, 0, _createRecord(key, value));\n\n    // Update state\n    this.setState(this.data);\n  }\n\n  /**\n   * 'child_removed' listener which removes a record from the bound array.\n   *\n   * @param {string} bindVar The state variable to which the data is bound.\n   * @param {Firebase.DataSnapshot} snapshot A snapshot of the bound data.\n   */\n  function _arrayChildRemoved(bindVar, snapshot) {\n    var array = this.data[bindVar];\n\n    // Look up the record's index in the array\n    var index = _indexForKey(array, _getKey(snapshot));\n\n    // Splice out the record from the array\n    array.splice(index, 1);\n\n    // Update state\n    this.setState(this.data);\n  }\n\n  /**\n   * 'child_changed' listener which updates a record's value in the bound array.\n   *\n   * @param {string} bindVar The state variable to which the data is bound.\n   * @param {Firebase.DataSnapshot} snapshot A snapshot of the data to bind.\n   */\n  function _arrayChildChanged(bindVar, snapshot) {\n    var key = _getKey(snapshot);\n    var value = snapshot.val();\n    var array = this.data[bindVar];\n\n    // Look up the record's index in the array\n    var index = _indexForKey(array, key);\n\n    // Update the record's value in the array\n    array[index] = _createRecord(key, value);\n\n    // Update state\n    this.setState(this.data);\n  }\n\n  /**\n   * 'child_moved' listener which updates a record's position in the bound array.\n   *\n   * @param {string} bindVar The state variable to which the data is bound.\n   * @param {Firebase.DataSnapshot} snapshot A snapshot of the bound data.\n   * @param {string|null} previousChildKey The key of the child after which the provided snapshot\n   * is positioned; null if the provided snapshot is in the first position.\n   */\n  function _arrayChildMoved(bindVar, snapshot, previousChildKey) {\n    var key = _getKey(snapshot);\n    var array = this.data[bindVar];\n\n    // Look up the record's index in the array\n    var currentIndex = _indexForKey(array, key);\n\n    // Splice out the record from the array\n    var record = array.splice(currentIndex, 1)[0];\n\n    // Determine where to re-insert the record\n    var insertionIndex;\n    if (previousChildKey === null) {\n      insertionIndex = 0;\n    } else {\n      var previousChildIndex = _indexForKey(array, previousChildKey);\n      insertionIndex = previousChildIndex + 1;\n    }\n\n    // Re-insert the record into the array\n    array.splice(insertionIndex, 0, record);\n\n    // Update state\n    this.setState(this.data);\n  }\n\n\n  /*************/\n  /*  BINDING  */\n  /*************/\n  /**\n   * Creates a binding between Firebase and the inputted bind variable as either an array or\n   * an object.\n   *\n   * @param {Firebase} firebaseRef The Firebase ref whose data to bind.\n   * @param {string} bindVar The state variable to which to bind the data.\n   * @param {function} cancelCallback The Firebase reference's cancel callback.\n   * @param {boolean} bindAsArray Whether or not to bind as an array or object.\n   */\n  function _bind(firebaseRef, bindVar, cancelCallback, bindAsArray) {\n    if (Object.prototype.toString.call(firebaseRef) !== '[object Object]') {\n      _throwError('Invalid Firebase reference');\n    }\n\n    _validateBindVar(bindVar);\n\n    if (typeof this.firebaseRefs[bindVar] !== 'undefined') {\n      _throwError('this.state.' + bindVar + ' is already bound to a Firebase reference');\n    }\n\n    // Keep track of the Firebase reference we are setting up listeners on\n    this.firebaseRefs[bindVar] = _getRef(firebaseRef);\n\n    if (bindAsArray) {\n      // Set initial state to an empty array\n      this.data[bindVar] = [];\n      this.setState(this.data);\n\n      // Add listeners for all 'child_*' events\n      this.firebaseListeners[bindVar] = {\n        child_added: firebaseRef.on('child_added', _arrayChildAdded.bind(this, bindVar), cancelCallback),\n        child_removed: firebaseRef.on('child_removed', _arrayChildRemoved.bind(this, bindVar), cancelCallback),\n        child_changed: firebaseRef.on('child_changed', _arrayChildChanged.bind(this, bindVar), cancelCallback),\n        child_moved: firebaseRef.on('child_moved', _arrayChildMoved.bind(this, bindVar), cancelCallback)\n      };\n    } else {\n      // Add listener for 'value' event\n      this.firebaseListeners[bindVar] = {\n        value: firebaseRef.on('value', _objectValue.bind(this, bindVar), cancelCallback)\n      };\n    }\n  }\n\n\n  var ReactFireMixin = {\n    /********************/\n    /*  MIXIN LIFETIME  */\n    /********************/\n    /**\n     * Initializes the Firebase refs and listeners arrays.\n     **/\n    componentWillMount: function() {\n      this.data = {};\n      this.firebaseRefs = {};\n      this.firebaseListeners = {};\n    },\n\n    /**\n     * Unbinds any remaining Firebase listeners.\n     */\n    componentWillUnmount: function() {\n      for (var bindVar in this.firebaseRefs) {\n        /* istanbul ignore else */\n        if (this.firebaseRefs.hasOwnProperty(bindVar)) {\n          this.unbind(bindVar);\n        }\n      }\n    },\n\n\n    /*************/\n    /*  BINDING  */\n    /*************/\n    /**\n     * Creates a binding between Firebase and the inputted bind variable as an array.\n     *\n     * @param {Firebase} firebaseRef The Firebase ref whose data to bind.\n     * @param {string} bindVar The state variable to which to bind the data.\n     * @param {function} cancelCallback The Firebase reference's cancel callback.\n     */\n    bindAsArray: function(firebaseRef, bindVar, cancelCallback) {\n      var bindPartial = _bind.bind(this);\n      bindPartial(firebaseRef, bindVar, cancelCallback, /* bindAsArray */ true);\n    },\n\n    /**\n     * Creates a binding between Firebase and the inputted bind variable as an object.\n     *\n     * @param {Firebase} firebaseRef The Firebase ref whose data to bind.\n     * @param {string} bindVar The state variable to which to bind the data.\n     * @param {function} cancelCallback The Firebase reference's cancel callback.\n     */\n    bindAsObject: function(firebaseRef, bindVar, cancelCallback) {\n      var bindPartial = _bind.bind(this);\n      bindPartial(firebaseRef, bindVar, cancelCallback, /* bindAsArray */ false);\n    },\n\n    /**\n     * Removes the binding between Firebase and the inputted bind variable.\n     *\n     * @param {string} bindVar The state variable to which the data is bound.\n     * @param {function} callback Called when the data is unbound and the state has been updated.\n     */\n    unbind: function(bindVar, callback) {\n      _validateBindVar(bindVar);\n\n      if (typeof this.firebaseRefs[bindVar] === 'undefined') {\n        _throwError('this.state.' + bindVar + ' is not bound to a Firebase reference');\n      }\n\n      // Turn off all Firebase listeners\n      for (var event in this.firebaseListeners[bindVar]) {\n        /* istanbul ignore else */\n        if (this.firebaseListeners[bindVar].hasOwnProperty(event)) {\n          var offListener = this.firebaseListeners[bindVar][event];\n          this.firebaseRefs[bindVar].off(event, offListener);\n        }\n      }\n      delete this.firebaseRefs[bindVar];\n      delete this.firebaseListeners[bindVar];\n\n      // Update state\n      var newState = {};\n      newState[bindVar] = undefined;\n      this.setState(newState, callback);\n    }\n  };\n\n  return ReactFireMixin;\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/reactfire/dist/reactfire.js\n ** module id = 3\n ** module chunks = 0\n **/","import React from \"react\";\n\nconst SignIn = React.createClass({\n\n  signIn() {\n    // firebase.google.com/docs/auth/web/github-auth#handle_the_sign-in_flow_with_the_firebase_sdk\n    const provider = new firebase.auth.GithubAuthProvider(); // eslint-disable-line no-undef\n    firebase.auth().signInWithPopup(provider).then((result) => { // eslint-disable-line no-undef\n      const user = result.user;\n      firebase.database().ref(`users/${user.uid}`).set({ // eslint-disable-line no-undef\n        displayName: user.displayName,\n        email: user.email,\n        githubId: user.providerData[0].uid,\n        photoURL: user.photoURL,\n        refreshToken: user.refreshToken,\n        token: result.credential.accessToken\n      });\n    }).catch((error) => console.error(error)); // eslint-disable-line no-undef, no-console\n  },\n\n  render() {\n    return <button onClick={this.signIn}>Sign in with GitHub</button>;\n  }\n});\nexport default SignIn;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/sign-in.jsx\n **/"],"sourceRoot":""}